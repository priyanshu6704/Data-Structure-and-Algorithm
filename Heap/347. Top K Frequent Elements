class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        int[] arr=new int[k];
        Map<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<nums.length;i++){
            if(!map.containsKey(nums[i])){
                map.put(nums[i],1);
            }else{
                map.put(nums[i],map.get(nums[i])+1);
            }
        }
        PriorityQueue<Integer> pq=new PriorityQueue<>((a,b)->map.get(a)-map.get(b));
        for(int key:map.keySet()){
           pq.add(key);
           if(pq.size()>k) pq.remove();
        }
        int i=0;
        while(pq.size()>0){
            arr[i]=pq.poll();
            i=i+1;
            
        }
        return arr;
    }
}
