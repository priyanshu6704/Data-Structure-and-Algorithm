/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void checkSum(List<List<Integer>> ans,List<Integer> arr,TreeNode root, int sum){
        if(root==null) return ;
        if(root.left=a=null && root.right==null){
            arr.add(root.val);
            if(root.val==sum){
                List<Integer> a=new ArrayList<>();
                for(int i=0;i<arr.size();i++){
                    a.add(arr.get(i));
                }
                ans.add(a);
            }
            arr.remove(arr.size()-1);
            return;
       }
       arr.add(root.val);
       checkSum(ans,arr,root.left,sum-root.val);
       checkSum(ans,arr,root.right,sum-root.val);
       arr.remove(arr.size()-1);
           }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> ans=new ArrayList<>();
        List<Integer> arr=new ArrayList<>();
        checkSum(ans,arr,root,targetSum); 
        return ans;
    }
}
